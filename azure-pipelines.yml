# Maven


# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'Personal SonarCloud'
    organization: 'gaven-accenture-training'
    scannerMode: 'Other'
- task: Maven@3
  inputs:
    mavenPomFile: 'cicd-demo/pom.xml'
    options: 'spring-boot:build-image -Dspring-boot.build-image.tag=docker.io/gavenyeh/cicd-demo:latest'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    mavenVersionOption: 'Default'
    mavenOptions: '-Xmx3072m'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: true
    sqMavenPluginVersionChoice: 'latest'
- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: Docker@2
  displayName: Login to Docker Hub
  inputs:
    containerRegistry: 'gaven-accenture-docker-hub'
    command: 'login'
- task: Docker@2
  displayName: Push
  inputs:
    containerRegistry: 'gaven-accenture-docker-hub'
    repository: 'gavenyeh/cicd-demo'
    command: 'push'
    tags: |
      latest
- task: CopyFiles@2
  inputs:
    SourceFolder: 'cicd-demo/target'
    Contents: '*.jar'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
# - task: BeanstalkDeployApplication@1
#   inputs:
#     awsCredentials: 'aws-gaven.yeh'
#     regionName: 'us-east-2'
#     applicationName: 'first-app'
#     environmentName: 'FirstApp-env'
#     applicationType: 's3'
#     deploymentBundleBucket: 'gaven.yeh-test'
#     deploymentBundleKey: 'Dockerrun.aws.json'
- task: TerraformInstaller@0
  inputs:
    terraformVersion: '0.12.26'
- task: TerraformTaskV1@0
  displayName: 'terraform init'
  inputs:
    provider: 'aws'
    command: 'init'
    workingDirectory: 'learn-terraform-code-organization-master'
    backendServiceAWS: 'aws-terraform'
    backendAWSBucketName: 'gaven-test'
    backendAWSKey: 'azure-terraform/terraform.tfstate'
- task: TerraformTaskV1@0
  displayName: 'terraform plan'
  inputs:
    provider: 'aws'
    command: 'plan'
    workingDirectory: 'learn-terraform-code-organization-master'
    environmentServiceNameAWS: 'aws-terraform'
- task: TerraformTaskV1@0
  displayName: 'terraform apply'
  inputs:
    provider: 'aws'
    command: 'apply'
    workingDirectory: 'learn-terraform-code-organization-master'
    environmentServiceNameAWS: 'aws-terraform'
